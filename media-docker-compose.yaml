
#| ---------------------------
#| | M E D I A - D O C K E R |
#| ---------------------------
#|
#| Container based media tools configuration
#|
#|
#| -- DO NOT EDIT THIS FILE --
#|
#| Configuration items for this file are taken from the .env file
#|
#| Have media-docker-compose.yaml and .env in the same directory to launch the stack

version: '3'

######################
# SERVICES TO LAUNCH #
######################

services:

    #--------------------------------------------#
   ## PLEX                                       ##
   ##  Robust Media Server                       ##
    #--------------------------------------------#
    plex:
        container_name: plex-server
        image: plexinc/pms-docker:${PLEX_TAG}
        restart: always
        hostname: ${HOSTNAME}
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - TZ=${TZ}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
        volumes:
            - '/share/data/containers/apps/media/plex-server/config:/config'
            - '/share/data/containers/apps/media/plex-server/transcode:/transcode'
            - '/share/data/shared:/shared'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=32400'
            - 'traefik.frontend.rule=Host:plex.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'




    #--------------------------------------------#
   ## DELUGEVPN                                  ##
   ##  Deluge Torrent Client + VPN               ##
    #--------------------------------------------#
    arch-delugevpn:
        image: binhex/arch-delugevpn:${DEFAULT_TAG}
        container_name: delugevpn
        restart: unless-stopped
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        expose:
            - 8112
        cap_add:
            - NET_ADMIN
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
            - VPN_ENABLED=yes
            - VPN_USER=${VPNUNAME}
            - VPN_PASS=${VPNPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=${VPNPROVIDER}
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=37.235.1.174,8.8.8.8,37.235.1.177,8.8.4.4
            - DEBUG=false
        volumes:
            - '/share/data/containers/apps/media/delugevpn:/config'
            - '/share/data/containers/apps/media/delugevpn/openvpn/${VPNPROVIDER}:/${VPNPROVIDER}'
            - '/share/data/shared/downloads/torrents:/shared/downloads/torrents'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8112'
            - 'traefik.frontend.rule=Host:deluge.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## SONARR                                     ##
   ##  TV Series Management                      ##
    #--------------------------------------------#
    sonarr:
        image: linuxserver/sonarr:${SONARR_TAG}
        container_name: sonarr-${SONARR_VERSION}
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8989
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/sonarr-${SONARR_VERSION}:/config'
            - '/share/data/shared:/shared'
            - '/share/data/@Recycle:/@Recycle'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8989'
            - 'traefik.frontend.rule=Host:sonarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## RADARR                                     ##
   ##  Movie Management                          ##
    #--------------------------------------------#
    radarr:
        image: linuxserver/radarr:${RADARR_TAG}
        container_name: radarr-${RADARR_VERSION}
        restart: unless-stopped
        networks:
            - web
        expose:
            - 7878
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/radarr-${RADARR_VERSION}:/config'
            - '/share/data/shared:/shared'
            - '/share/data/@Recycle:/@Recycle'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=7878'
            - 'traefik.frontend.rule=Host:radarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## LIDARR                                     ##
   ##  Music Management                          ##
    #--------------------------------------------#
    lidarr:
        image: linuxserver/lidarr:${LIDARR_TAG}
        container_name: lidarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8686
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/lidarr:/config'
            - '/share/data/shared:/shared'
            - '/share/data/@Recycle:/@Recycle'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8686'
            - 'traefik.frontend.rule=Host:lidarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## READARR                                    ##
   ##  eBook Management                          ##
    #--------------------------------------------#
    readarr:
        image: hotio/readarr:${READARR_TAG}
        container_name: readarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8787
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/readarr:/config'
            - '/share/data/shared:/shared'
            - '/share/data/@Recycle:/@Recycle'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8787'
            - 'traefik.frontend.rule=Host:lidarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## JACKETT                                    ##
   ##  RSS/TORZNAB Feed Creator                  ##
    #--------------------------------------------#
    jackett:
        image: linuxserver/jackett:${DEFAULT_TAG}
        container_name: jackett
        restart: unless-stopped
        networks:
            - web
        expose:
            - 9117
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/jackett:/config'
            - '/share/data/shared/downloads/torrents:/shared/downloads/torrents'
            - '/share/data/shared:/shared'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9117'
            - 'traefik.frontend.rule=Host:jackett.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## TAUTULLI                                   ##
   ##  Monitoring Service for PLEX Usage         ##
    #--------------------------------------------#
    plexpy:
        image: linuxserver/tautulli:${DEFAULT_TAG}
        container_name: tautulli
        restart: always
        networks:
            - web
        expose:
            - 8181
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/tautulli:/config'
            - '/share/data/containers/apps/media/plex-server/Library/Application Support/Plex Media Server/Logs:/logs:ro'
            - '/etc/localtime:/etc/localtime:ro'
        depends_on:
            - plex
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8181'
            - 'traefik.frontend.rule=Host:plexpy.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## OMBI                                       ##
   ##  Request Service for Plex Content          ##
    #--------------------------------------------#
    ombi:
        image: linuxserver/ombi:${OMBI_TAG}
        container_name: ombi-${OMBI_VERSION}
        restart: unless-stopped
        networks:
            - web
        expose:
            - 3579
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/ombi-${OMBI_VERSION}:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=3579'
            - 'traefik.frontend.rule=Host:request.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'




    #--------------------------------------------#
   ## MUXIMUX                                    ##
   ##  Web Frontend for HTPC Management          ##
    #--------------------------------------------#
    muximux:
        image: linuxserver/muximux:${DEFAULT_TAG}
        container_name: muximux
        restart: unless-stopped
        networks:
            - web
        expose:
            - 80
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/share/data/containers/apps/media/muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=80'
            - 'traefik.frontend.rule=Host:manage.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'


########################
# GLOBAL CONFIGURATION #
########################

networks:
    internal:
    web:

